source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
logit <- functioni(x) exp(x)/(1+exp(x))
logit <- function(x) exp(x)/(1+exp(x))
logit <- function(x) exp(x)/(1+exp(x))
probit <- function(X) pnorm(x)
cloglog <- function(x) 1 - exp(-exp(x))
x_logit <- logit(x)
x_probit <- probit(x)
x_cloglog <- cloglog(x)
plot(x_cloglog)
plot(x, x_cloglog)
plot(x=x, y = x_cloglog)
plot(x=x, y = x_cloglog, type = "l")
plot(x=x, y = cloglog(x), type = "l")
plot(x=x, y = logit(x), type = "l")
logit_range <- seq(from = min(x_logit), to = max(x_logit), by = .01)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
plot(logit_range)
plot(x, logit_range)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
View(data)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
View(data)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
View(data)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
View(x_logit)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
X <- subset(-data$DV)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
x_cloglog <- cloglog(X)
logit_range <- seq(from = min(x_logit), to = max(x_logit), by = .01)
probit_range <- seq(from = min(x_probit), to = max(x_probit), by = .01)
cloglog_range <- seq(from = min(x_cloglog), to = max(x_cloglog), by = .01)
plot(data$DV, logit_range)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
cloglog <- function(x) 1 - exp(-exp(x))
x_logit <- logit(X)
x_probit <- probit(X)
x_cloglog <- cloglog(X)
logit_range <- seq(from = min(data$X1), to = max(data$X1), len = 300)
probit_range <- seq(from = min(x_probit), to = max(x_probit),len = 300)
cloglog_range <- seq(from = min(x_cloglog), to = max(x_cloglog), len = 300)
plot(data$DV, logit_range)
plot(x_logit~logit_range, col = "red")
plot(x_logit~logit_range, col = "red")
View(x_logit)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
lines(x_logit~logit_range, col = "green", lwd = 2)
data <- na.omit(subset(airquality, select = c(Ozone, Solar.R, Wind, Temp)))
data$Ozone <- data$Ozone > mean(data$Ozone)
head(data, n = 3)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
y <- model.response(model.frame(Ozone~.,data = data))
X <- model.matrix(model.frame(Ozone~., data = data), data)
par <- rep(0, ncol(X))
opt <- optim(par = par, fn = ll, method = "BFGS", y = y, X = X)
print(opt$par)
View(X)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
c("evaluate ll()" = -ll(opt$par, y = y, X = X), "optim return" = -opt$value)
summary(glm(Ozone~., data = data, family = binomial(link = "logit")))
View(data)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
View(data)
source('~/.active-rstudio-document', echo=TRUE)
View(data)
str(data)
sum(is.na(data))
logreg <- glm(Ozone~Wind, data = data, family = "binomial")
summary(logreg)
logreg$coefficients
logreg$coefficients[0]
logreg$coefficients[1]
logreg <- glm(Ozone~., data = data, family = "binomial")
summary(logreg)
# overall effect
ll_null <- logreg$null.deviance/-2
ll_proposed <- logreg$deviance/-2
(ll_null-ll_proposed)/ll_null
# overall effect
ll_null <- logreg$null.deviance/-2
ll_proposed <- logreg$deviance/-2
(ll_null-ll_proposed)/ll_null
1-pchisq(2*(ll_proposed-ll_null), df = (length(logreg$coefficients)-1))
#visualize
prediction <- data.frame(prob_Ozone = logreg$fitted.values, Ozone = data$Ozone)
View(prediction)
prediction <- prediction[order(prediction$prob_Ozone, decreasing = F),]
prediction <- 1:nrow(prediction)
library(cowplot)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/statquest.R', echo=TRUE)
library(ggplot2)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/statquest.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/statquest.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/statquest.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
# interpretation of model
mod <- glm(Ozone~., data = data, family = binomial(link = "logit"))
coef(mod)
# a change by +1 in Wind speed:
b <- coef(mod)["Wind"]
c("beta"=b, "exp(beta)" = exp(b), "change" = 100*exp(b)-100)
View(data)
logit <- glm(Ozone~., data = data, familiy = binomial(link = "logit"))
# different link functions
logit <- glm(Ozone~., data = data, familiy = binomial(link = "logit"))
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
probit <- glm(Ozone~., data = data, familiy = binomial(link = "probit"))
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
View(mod)
# interpretation of model
mod <- glm(Ozone~., data = data, family = binomial(link = "logit"))
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
c(logLik(logit), logLik(probit), logLik(cloglog))
anova(logit, probit, cloglog)
pi_logit <- fitted(logit); eta_logit <- predict(logit)
pi_probit <- fitted(probit); eta_probit <- predict(probit)
pi_cloglog <- fitted(cloglog); eta_cloglog <- predict(cloglog)
plot(pi_logit)
plot(logit~probit)
View(logit)
plot(logit$fitted.values~probit)
View(probit)
plot(logit$fitted.values~probit$fitted.values)
plot(logit$fitted.values~cloglog$fitted.values)
plot(logit$fitted.values~cloglog$fitted.values, col = "red")
points(logit$fitted.values~cloglog$fitted.values, col = "red")
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
points(logit$fitted.values~cloglog$fitted.values, col = "red", ylab = "logit model", xlab = "probit/cloglog model")
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
legend(x = "topleft", inset = 0, legend = c("logit~probit", "logit~cloglog"), col = c("red", "black"))
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
legend(x = "topleft", inset = 0, legend = c("logit~probit", "logit~cloglog"), lwd = 5, cex = 1, col = c("red", "black"))
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
## Rs Formula interface
data <- na.omit(subset(airquality, select = c(Ozone, Solar.R, Wind, Temp)))
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
# calculate individual Effects
mod <- glm(Ozone>mean(Ozone)~Solar.R+Wind+Temp, data = data, family = binomial(link = "logit"))
effect_Wind <- data$Wind*coef(mod)["Wind"]
plot(data$Wind, col = "black")
plot(data$Wind, col = "black", type = "l")
lines(effect_Wind, col = "red", type = "l")
lines(effect_Wind, col = "red")
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
idx <- 1:ncol(data)
plot(x = idx, data$Wind, col = "black", type = "l")
lines(effect_Wind, col = "red")
lines(effect_Wind, col = "red")
plot(effect_Wind, col = "red")
plot(effect_Wind, col = "red", type = "l")
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
View(data)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
idx <- seq(1:nrow(data))
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
plot(data$Wind, col = "black", type = "l", ylim = range(c(data$Wind)))
par(new = T)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
# get modelled effects
mod <- glm(Ozone>mean(Ozone)~Solar.R+Wind+Temp, data = data, family = binomial(link = "logit"))
eff <- predict(mod, type = "terms")
head(eff, n = 3)
par(mfrow = c(3,1))
View(eff)
plot(eff$Solar.R)
plot(eff["Solar.R"])
plot(eff[,"Solar.R"])
plot(eff[,"Solar.R"], type = "l", main = "Effects/Terms", ylab = "Solar.R")
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
x <- 0:7
plot(x, dpois(x, lambda = 0.5), type = "h")
plot(x, dpois(x, lambda = 0.5), type = "h", lwd = 5)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
data <- readRDS("D:\DataScience\ULG\VU1-Data-Management\2021-02-06\traffic.rds")
data <- readRDS("D:/DataScience/ULG/VU1-Data-Management/2021-02-06/traffic.rds")
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
View(data)
mgauss <- lm(Ozone~Wind+Solar.R, data = data)
mpoiss <- glm(Ozone~Wind+Solar.R, data = data, family = "poisson")
print(mpoiss)
plot(data$Ozone, type = "l", col = "black")
par(mfrow = c(1,1))
plot(data$Ozone, type = "l", col = "black")
lines(mgauss, col = "red")
abline(mgauss, col = "red")
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
eff_gauss <- predict(mgauss, type = "terms")
plot(eff_gauss, type = "l", col = "red")
effect_gauss <- data$Ozone*coef(mod)
effect_gauss <- data$Ozone*coef(mgauss)
plot(effect_Wind, col = "red", type = "l", ylim = range(effect_Wind), axes = F, xlab = "", ylab="")
plot(effect_gauss, col = "red", type = "l", ylim = range(effect_gauss), axes = F, xlab = "", ylab="")
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', echo=TRUE)
## interpretation
coefficients(mpoiss)[c("(Intercept)","Wind","Solar.R")]
exp(coefficients(mpoiss)["Solar.R"])
100*exp(coefficients(mpoiss)["Solar.R"])-100
### Poisson Regression usually used with factors (but didn´t have a dataset)
data <- read.csv("D:/DataScience/ULG/VU1-Data-Management/data/bevoelkerung-tirol.csv")
View(data)
### Poisson Regression usually used with factors (but didn´t have a dataset)
data <- read.csv("D:/DataScience/ULG/VU1-Data-Management/data/bevoelkerung-tirol.csv", comment.char = "#")
View(data)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', encoding = 'UTF-8', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', encoding = 'UTF-8', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', encoding = 'UTF-8', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', encoding = 'UTF-8', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', encoding = 'UTF-8', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', encoding = 'UTF-8', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', encoding = 'UTF-8', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', encoding = 'UTF-8', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', encoding = 'UTF-8', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', encoding = 'UTF-8', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', encoding = 'UTF-8', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', encoding = 'UTF-8', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', encoding = 'UTF-8', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', encoding = 'UTF-8', echo=TRUE)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', encoding = 'UTF-8', echo=TRUE)
View(mpoiss)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', encoding = 'UTF-8', echo=TRUE)
plot(x = data$Jahr, y = pred_poiss, col = "blue", type = "l", ylim = range(pred_gauss), axes = F, xlab = "", ylab="")
plot(x = data$Jahr, y = pred_gauss, col = "red", type = "l", ylim = range(pred_gauss), axes = F, xlab = "", ylab="")
plot(x = data$Jahr, y = data$Tuerkei, type = "l", col = "black")
par(new = T)
plot(x = data$Jahr, y = pred_gauss, col = "red", type = "l", ylim = range(pred_gauss), axes = F, xlab = "", ylab="")
par(new = T)
plot(x = data$Jahr, y = pred_poiss, col = "blue", type = "l", ylim = range(pred_gauss), axes = F, xlab = "", ylab="")
print(mpoiss)
plot(pred_poiss)
source('D:/DataScience/ULG/VU-Supervised-Learning-Parametric-and-Semi-Parametric/01_GLM/01_GLM/01_GLM.R', encoding = 'UTF-8', echo=TRUE)
100*exp(coefficients(mpoiss)["factor(Jahr)2009"])-100
